{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancers_EastUSwebLB_name": {
            "defaultValue": "EastUSwebLB",
            "type": "String"
        },
        "virtualNetworks_VnetEastUS_name": {
            "defaultValue": "VnetEastUS",
            "type": "String"
        },
        "loadBalancers_EastUSImageLB_name": {
            "defaultValue": "EastUSImageLB",
            "type": "String"
        },
        "virtualMachines_EastUsVMWeb1_name": {
            "defaultValue": "EastUsVMWeb1",
            "type": "String"
        },
        "applicationGateways_EastUSAG_name": {
            "defaultValue": "EastUSAG",
            "type": "String"
        },
        "loadBalancers_CentralUSWebLB_name": {
            "defaultValue": "CentralUSWebLB",
            "type": "String"
        },
        "publicIPAddresses_EastUSAGIP_name": {
            "defaultValue": "EastUSAGIP",
            "type": "String"
        },
        "virtualNetworks_VnetCentraUS_name": {
            "defaultValue": "VnetCentraUS",
            "type": "String"
        },
        "virtualMachines_EastUSVMImage_name": {
            "defaultValue": "EastUSVMImage",
            "type": "String"
        },
        "publicIPAddresses_eastuswebip_name": {
            "defaultValue": "eastuswebip",
            "type": "String"
        },
        "virtualMachines_VMCentralUSWeb_name": {
            "defaultValue": "VMCentralUSWeb",
            "type": "String"
        },
        "loadBalancers_CentralUsLBImage_name": {
            "defaultValue": "CentralUsLBImage",
            "type": "String"
        },
        "applicationGateways_CentralUSAG_name": {
            "defaultValue": "CentralUSAG",
            "type": "String"
        },
        "publicIPAddresses_CentralUSAGip_name": {
            "defaultValue": "CentralUSAGip",
            "type": "String"
        },
        "publicIPAddresses_eastUsimageip_name": {
            "defaultValue": "eastUsimageip",
            "type": "String"
        },
        "virtualMachines_VMCentralUSImage_name": {
            "defaultValue": "VMCentralUSImage",
            "type": "String"
        },
        "networkInterfaces_eastusvmweb1946_name": {
            "defaultValue": "eastusvmweb1946",
            "type": "String"
        },
        "trafficManagerProfiles_tyrellcrop_name": {
            "defaultValue": "tyrellcrop",
            "type": "String"
        },
        "networkInterfaces_eastusvmimage865_name": {
            "defaultValue": "eastusvmimage865",
            "type": "String"
        },
        "publicIPAddresses_centralUSweblbip_name": {
            "defaultValue": "centralUSweblbip",
            "type": "String"
        },
        "networkInterfaces_vmcentralusweb873_name": {
            "defaultValue": "vmcentralusweb873",
            "type": "String"
        },
        "publicIPAddresses_centralusimalelbip_name": {
            "defaultValue": "centralusimalelbip",
            "type": "String"
        },
        "networkInterfaces_vmcentralusimage876_name": {
            "defaultValue": "vmcentralusimage876",
            "type": "String"
        },
        "networkSecurityGroups_EastUsVMWeb1_nsg_name": {
            "defaultValue": "EastUsVMWeb1-nsg",
            "type": "String"
        },
        "networkSecurityGroups_EastUSVMImage_nsg_name": {
            "defaultValue": "EastUSVMImage-nsg",
            "type": "String"
        },
        "networkSecurityGroups_VMCentralUSWeb_nsg_name": {
            "defaultValue": "VMCentralUSWeb-nsg",
            "type": "String"
        },
        "networkSecurityGroups_VMCentralUSImage_nsg_name": {
            "defaultValue": "VMCentralUSImage-nsg",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkSecurityGroups_EastUSVMImage_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "description": "Allowhttp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "description": "allohttp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkSecurityGroups_VMCentralUSImage_nsg_name')]",
            "location": "centralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "description": "allowhttp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name')]",
            "location": "centralus",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "description": "allowhttp",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_CentralUSAGip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "13.89.110.74",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "tyralcropcentralusag",
                    "fqdn": "tyralcropcentralusag.centralus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_centralusimalelbip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "23.99.249.85",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_centralUSweblbip_name')]",
            "location": "centralus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "23.99.252.1",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_EastUSAGIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "52.186.47.239",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "tyrellcropeastusag",
                    "fqdn": "tyrellcropeastusag.eastus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_eastUsimageip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "52.240.54.85",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-03-01",
            "name": "[parameters('publicIPAddresses_eastuswebip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "52.240.54.232",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-03-01",
            "name": "[parameters('virtualNetworks_VnetCentraUS_name')]",
            "location": "centralus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.20.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "subnet1",
                        "properties": {
                            "addressPrefix": "10.20.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "lbsubnet",
                        "properties": {
                            "addressPrefix": "10.20.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AGsubnet",
                        "properties": {
                            "addressPrefix": "10.20.2.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-03-01",
            "name": "[parameters('virtualNetworks_VnetEastUS_name')]",
            "location": "eastus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "subnet1",
                        "properties": {
                            "addressPrefix": "10.10.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "subnetAG",
                        "properties": {
                            "addressPrefix": "10.10.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "lbsubnet",
                        "properties": {
                            "addressPrefix": "10.10.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_EastUSVMImage_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmimage865_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_EastUSVMImage_name'), '_disk1_d5dfc6f98f334e9784576002c64a314c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_EastUSVMImage_name'), '_disk1_d5dfc6f98f334e9784576002c64a314c'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_EastUSVMImage_name')]",
                    "adminUsername": "abish",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmimage865_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_EastUsVMWeb1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmweb1946_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_EastUsVMWeb1_name'), '_disk1_e33ee689dce94ad6bc095edffd98949b')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_EastUsVMWeb1_name'), '_disk1_e33ee689dce94ad6bc095edffd98949b'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_EastUsVMWeb1_name')]",
                    "adminUsername": "abish",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmweb1946_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_VMCentralUSImage_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusimage876_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_VMCentralUSImage_name'), '_disk1_67e663df5f194917a3f08cda6c280e6c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VMCentralUSImage_name'), '_disk1_67e663df5f194917a3f08cda6c280e6c'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_VMCentralUSImage_name')]",
                    "adminUsername": "abish",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusimage876_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_VMCentralUSWeb_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusweb873_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_VMCentralUSWeb_name'), '_disk1_f1c84da93b094fc0a4dcfdc549a830fb')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_VMCentralUSWeb_name'), '_disk1_f1c84da93b094fc0a4dcfdc549a830fb'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_VMCentralUSWeb_name')]",
                    "adminUsername": "abish",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusweb873_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('loadBalancers_CentralUsLBImage_name'), '/sshrule')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 50001,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('loadBalancers_CentralUSWebLB_name'), '/sshrule')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 50001,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('loadBalancers_EastUSImageLB_name'), '/sshrule')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 50001,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('loadBalancers_EastUSwebLB_name'), '/vm1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 50001,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_EastUSVMImage_nsg_name'), '/Port_8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUSVMImage_nsg_name'))]"
            ],
            "properties": {
                "description": "Allowhttp",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'), '/Port_8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'))]"
            ],
            "properties": {
                "description": "allohttp",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'), '/Port_8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'))]"
            ],
            "properties": {
                "description": "allowhttp",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'), '/Port_8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'))]"
            ],
            "properties": {
                "description": "allowhttp",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 310,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_EastUSVMImage_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUSVMImage_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetCentraUS_name'), '/AGsubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetCentraUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.20.2.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetCentraUS_name'), '/lbsubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetCentraUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.20.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetEastUS_name'), '/lbsubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetEastUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.10.2.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetCentraUS_name'), '/subnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetCentraUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.20.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetEastUS_name'), '/subnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetEastUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.10.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('virtualNetworks_VnetEastUS_name'), '/subnetAG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VnetEastUS_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.10.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-03-01",
            "name": "[parameters('applicationGateways_CentralUSAG_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'AGsubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_CentralUSAGip_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'AGsubnet')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_CentralUSAGip_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "lbpool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "23.99.252.1"
                                },
                                {
                                    "fqdn": "23.99.249.85"
                                }
                            ]
                        }
                    },
                    {
                        "name": "imagepool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "23.99.249.85"
                                }
                            ]
                        }
                    },
                    {
                        "name": "webpool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "23.99.252.1"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "websettings",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "weblistener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [
                    {
                        "name": "webrule",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendAddressPools/lbpool')]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendHttpSettingsCollection/websettings')]"
                            },
                            "pathRules": [
                                {
                                    "name": "imagetarget",
                                    "properties": {
                                        "paths": [
                                            "/images/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendAddressPools/imagepool')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendHttpSettingsCollection/websettings')]"
                                        }
                                    }
                                },
                                {
                                    "name": "webtarget",
                                    "properties": {
                                        "paths": [
                                            "/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendAddressPools/webpool')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/backendHttpSettingsCollection/websettings')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "webrule",
                        "properties": {
                            "ruleType": "PathBasedRouting",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/httpListeners/weblistener')]"
                            },
                            "urlPathMap": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_CentralUSAG_name')), '/urlPathMaps/webrule')]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2020-03-01",
            "name": "[parameters('applicationGateways_EastUSAG_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnetAG')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_EastUSAGIP_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnetAG')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_EastUSAGIP_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "port_8080",
                        "properties": {
                            "port": 8080
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "webpool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "52.240.54.232"
                                }
                            ]
                        }
                    },
                    {
                        "name": "lbpool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "52.240.54.85"
                                },
                                {
                                    "ipAddress": "52.240.54.232"
                                }
                            ]
                        }
                    },
                    {
                        "name": "imagepool",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "52.240.54.85"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "imagesettings",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "lblistener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [
                    {
                        "name": "lbrule",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendAddressPools/lbpool')]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendHttpSettingsCollection/imagesettings')]"
                            },
                            "pathRules": [
                                {
                                    "name": "webtarget",
                                    "properties": {
                                        "paths": [
                                            "/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendAddressPools/webpool')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendHttpSettingsCollection/imagesettings')]"
                                        }
                                    }
                                },
                                {
                                    "name": "imagetarget",
                                    "properties": {
                                        "paths": [
                                            "/images/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendAddressPools/imagepool')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/backendHttpSettingsCollection/imagesettings')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "lbrule",
                        "properties": {
                            "ruleType": "PathBasedRouting",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/httpListeners/lblistener')]"
                            },
                            "urlPathMap": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_EastUSAG_name')), '/urlPathMaps/lbrule')]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-03-01",
            "name": "[parameters('loadBalancers_CentralUsLBImage_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_centralusimalelbip_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusimage876_name'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_centralusimalelbip_name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "imagepool",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "backendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusimage876_name')), '/ipConfigurations/ipconfig1')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/loadBalancingRules/lbroolimage')]"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lbroolimage",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/backendAddressPools/imagepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/probes/hprobe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "hprobe",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "sshrule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-03-01",
            "name": "[parameters('loadBalancers_CentralUSWebLB_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_centralUSweblbip_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusweb873_name'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_centralUSweblbip_name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "webpool",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "backendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmcentralusweb873_name')), '/ipConfigurations/ipconfig1')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/loadBalancingRules/lbrule')]"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lbrule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/backendAddressPools/webpool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/probes/webhealth')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "webhealth",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "sshrule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-03-01",
            "name": "[parameters('loadBalancers_EastUSImageLB_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_eastUsimageip_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmimage865_name'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_eastUsimageip_name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "Eastusimagepool",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "backendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmimage865_name')), '/ipConfigurations/ipconfig1')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/loadBalancingRules/lbimage')]"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lbimage",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/backendAddressPools/Eastusimagepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/probes/imageprobe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "imageprobe",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 3
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "sshrule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-03-01",
            "name": "[parameters('loadBalancers_EastUSwebLB_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_eastuswebip_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmweb1946_name'))]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_eastuswebip_name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "webbackend",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "backendIPConfigurations": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_eastusvmweb1946_name')), '/ipConfigurations/ipconfig1')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/loadBalancingRules/webrule')]"
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "webrule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/backendAddressPools/webbackend')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/probes/prob1')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "prob1",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/",
                            "intervalInSeconds": 20,
                            "numberOfProbes": 4
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "vm1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/trafficManagerProfiles",
            "apiVersion": "2018-04-01",
            "name": "[parameters('trafficManagerProfiles_tyrellcrop_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_EastUSAGIP_name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_CentralUSAGip_name'))]"
            ],
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Performance",
                "dnsConfig": {
                    "relativeName": "[parameters('trafficManagerProfiles_tyrellcrop_name')]",
                    "ttl": 60
                },
                "monitorConfig": {
                    "profileMonitorStatus": "Online",
                    "protocol": "HTTP",
                    "port": 80,
                    "path": "/",
                    "intervalInSeconds": 30,
                    "toleratedNumberOfFailures": 3,
                    "timeoutInSeconds": 10
                },
                "endpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/trafficManagerProfiles', parameters('trafficManagerProfiles_tyrellcrop_name')), '/azureEndpoints/EastUsendpoint')]",
                        "name": "EastUsendpoint",
                        "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "endpointMonitorStatus": "Online",
                            "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_EastUSAGIP_name'))]",
                            "target": "[concat(parameters('trafficManagerProfiles_tyrellcrop_name'), 'eastusag.eastus.cloudapp.azure.com')]",
                            "weight": 1,
                            "priority": 1,
                            "endpointLocation": "East US"
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/trafficManagerProfiles', parameters('trafficManagerProfiles_tyrellcrop_name')), '/azureEndpoints/centralusendpoint')]",
                        "name": "centralusendpoint",
                        "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "endpointMonitorStatus": "Online",
                            "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_CentralUSAGip_name'))]",
                            "target": "tyralcropcentralusag.centralus.cloudapp.azure.com",
                            "weight": 1,
                            "priority": 2,
                            "endpointLocation": "Central US"
                        }
                    }
                ],
                "trafficViewEnrollmentStatus": "Disabled",
                "maxReturn": 0
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkInterfaces_eastusvmimage865_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnet1')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_EastUSImageLB_name'), 'sshrule')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUSVMImage_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.10.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSImageLB_name')), '/backendAddressPools/Eastusimagepool')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_EastUSImageLB_name'), 'sshrule')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUSVMImage_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkInterfaces_eastusvmweb1946_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnet1')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_EastUSwebLB_name'), 'vm1')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.10.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetEastUS_name'), 'subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_EastUSwebLB_name')), '/backendAddressPools/webbackend')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_EastUSwebLB_name'), 'vm1')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_EastUsVMWeb1_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkInterfaces_vmcentralusimage876_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'subnet1')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_CentralUsLBImage_name'), 'sshrule')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.20.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUsLBImage_name')), '/backendAddressPools/imagepool')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_CentralUsLBImage_name'), 'sshrule')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSImage_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('networkInterfaces_vmcentralusweb873_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'subnet1')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_CentralUSWebLB_name'), 'sshrule')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.20.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VnetCentraUS_name'), 'subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_CentralUSWebLB_name')), '/backendAddressPools/webpool')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_CentralUSWebLB_name'), 'sshrule')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VMCentralUSWeb_nsg_name'))]"
                }
            }
        }
    ]
}